#version 330 core

layout (location = 0) in vec3 vertexPos;
layout (location = 1) in vec3 vertexColor;
layout (location = 2) in vec2 vertexTexture;

uniform mat4 transform;

//uniform mat4 modelMat;
//uniform mat4 projMat;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

out vec3 color;
out vec2 texturePos;

void main() 
{
//SIMP
//color = vertexColor;
//texturePos = vertexTexture;
//gl_Position = vec4(vertexPos,1.0);

//gl_Position = vec4(vertexPos.x,-vertexPos.y,vertexPos.z,1.0);//reverse triangles

//scale 0.5 rotate 90

color = vertexColor;
texturePos = vertexTexture;
gl_Position = transform * vec4(vertexPos, 1.0f);

//gl_Position = projMat * modelMat * vec4(vertexPos, 1.0f);


//gl_Position = projection * view * model * vec4(aPos, 1.0);

};